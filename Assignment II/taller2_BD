3-
SELECT P.ID_PATIENT,P.PATIENT_NAME, P.PATIENT_ADDRESS, PB.DATE_BILL, PBD.CHARGE, PB.BALANCE_DUE, PBD.ID_PATIENT_BILL_DETAIL
FROM PATIENT P INNER JOIN PATIENT_BILL PB ON P.ID_PATIENT = PB.ID_PATIENT
INNER JOIN PATIENT_BILL_DETAIL PBD ON PB.ID_PATIENT_BILL = PBD.ID_PATIENT_BILL
WHERE PB.BALANCE_DUE = (SELECT MAX(BALANCE_DUE) FROM PATIENT_BILL)
GROUP BY P.ID_PATIENT,P.PATIENT_NAME, P.PATIENT_ADDRESS, PB.DATE_BILL, PBD.CHARGE, PB.BALANCE_DUE, PBD.ID_PATIENT_BILL_DETAIL
;

4-
CREATE OR REPLACE FUNCTION TOTAL_BALACE(COSTCENTER IN INTEGER, IDBILL IN INTEGER) RETURN INTEGER AS
TOTAL INTEGER := 0;
BEGIN
   SELECT SUM(I.CHARGE)INTO TOTAL FROM PATIENT_BILL_DETAIL PBD INNER JOIN ITEM I ON PBD.ID_ITEM_CODE = I.ID_ITEM_CODE
   INNER JOIN COST_CENTER C ON I.ID_COST_CENTER = C.ID_COST_CENTER
   WHERE I.ID_COST_CENTER = COSTCENTER AND PBD.ID_PATIENT_BILL = IDBILL
   ;
   IF (TOTAL) != 0 THEN
    TOTAL := TOTAL;
   ELSE
    TOTAL := 0;
   END IF;
   RETURN TOTAL;
END;
-------------------------------------

CREATE OR REPLACE FUNCTION TOTAL_NUMBER(COSTCENTER IN INTEGER, IDBILL IN INTEGER) RETURN INTEGER AS
 TOTAL INTEGER := 0;
BEGIN
   SELECT COUNT(I.ID_ITEM_CODE) INTO TOTAL FROM PATIENT_BILL_DETAIL PBD INNER JOIN ITEM I ON PBD.ID_ITEM_CODE = I.ID_ITEM_CODE
   INNER JOIN COST_CENTER C ON I.ID_COST_CENTER = C.ID_COST_CENTER
   WHERE I.ID_COST_CENTER = COSTCENTER AND PBD.ID_PATIENT_BILL = IDBILL
   ;
   IF (TOTAL) != 0 THEN
    TOTAL := TOTAL;
   ELSE
    TOTAL := 0;
   END IF;
   RETURN TOTAL;
END;
